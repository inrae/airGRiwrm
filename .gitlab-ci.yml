stages:
    - checks

default:
  tags: [docker]

image: r-base:latest

variables:
  R_LIBS_USER: "$CI_PROJECT_DIR/ci/lib"
  CHECK_DIR: "$CI_PROJECT_DIR/ci/logs"
  BUILD_LOGS_DIR: "$CI_PROJECT_DIR/ci/logs/$CI_PROJECT_NAME.Rcheck"

cache:
  paths:
    - $R_LIBS_USER

before_script:
  - apt-get update && apt-get -y install libcurl4-openssl-dev libxml2-dev
  - mkdir -p $R_LIBS_USER $BUILD_LOGS_DIR
  - Rscript -e 'if(!dir.exists(file.path(Sys.getenv("R_LIBS_USER"), "remotes"))) install.packages("remotes", lib = Sys.getenv("R_LIBS_USER"))'
  - Rscript -e 'remotes::install_gitlab("HYCAR-Hydro/airgr@dev", host = "gitlab.irstea.fr", lib = Sys.getenv("R_LIBS_USER"))'
  - R -e 'devtools::install_deps(dep = T, lib = Sys.getenv("R_LIBS_USER"))'
  - Rscript -e "devtools::document(roclets = c('rd', 'collate', 'namespace'))"

.check:
  stage: checks
  script:
    - R -e 'devtools::check(check_dir = Sys.getenv("CHECK_DIR"), cran = !as.logical(Sys.getenv("NOT_CRAN"))'
    - R -e 'if (length(devtools::check_failures(path = Sys.getenv("BUILD_LOGS_DIR"), note = FALSE)) > 0) stop()'

check_not_cran:
  variable:
    NOT_CRAN: "true"
  extends: .check

check_as_cran:
  variable:
    NOT_CRAN: "false"
  extends: .check
